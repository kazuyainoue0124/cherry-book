# xオプションを使うと、空白文字（半角スペースや改行文字）が無視され、#を使って正規表現中にコメントを書ける
# xオプションを付けたので改行やスペースが無視され、コメントも書ける
regexp = /
  \d{3} # 郵便番号の先頭3桁
  -     # 区切り文字のハイフン
  \d{4} # 郵便番号の末尾4桁
/x
puts '123-4567' =~ regexp #=> 0

# xオプションを付けているときに、空白を無視せず正規表現の一部として扱いたい場合はバックスラッシュでエスケープする
regexp = /
  \d{3}
  \     # 半角スペースで区切る
  \d{4}
/x
puts '123 4567' =~ regexp #=> 0

# Regexp.newを使う場合は、Regexp::EXTENDEDという定義を渡す
# バックスラッシュを特別扱いしないように'TEXT'を使う
pattern = <<'TEXT'
  \d{3} # 郵便番号の先頭3桁
  -     # 区切り文字のハイフン
  \d{4} # 郵便番号の末尾4桁
TEXT
regexp = Regexp.new(pattern, Regexp::EXTENDED)
puts '123-4567' =~ regexp #=> 0